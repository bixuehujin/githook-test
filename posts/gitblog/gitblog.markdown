---
category: PHP
status: published
tags: git, markdown, 毕业设计
title: 基于git和markdown的内容管理平台的设计与开发
---

现拟定毕业设计题目为**基于git和markdown的内容管理平台的设计与开发**，最终会开发一个成形的WEB应用程序，暂时取名叫GitBlog（下文用该名词进行引用）。
下面就对这个项目进行简单的说明。

## 概念

该部分介绍一些本系统涉及的概念和术语。

### git 与 github

git 是一个非常流行的分布式的版本控制系统，经由它管理的文件的所有版本都是可回溯的，我们可以轻而易举的找到n次修改以前的版本，
再也不用担心因为错误的修改而导致已有数据的丢失，提升了数据的安全性。

github 是一个采用git的源代码托管网站，GitBlog正常运行的前提是需要在该网站上注册帐号并创建属于自己的仓库。以后所有对网站内容的修改均体现在对
此仓库的修改。

### markdown

markdown是一种轻量级的标记语言，它语法简单，易学易懂，便于编辑的同时易于阅读。用它来进行编写各种文章或文档，可以潜心专注写作，
而不用为了调各种各样的格式而耽误宝贵的时间。

当文章创作好后，可以很容易的利用工具软件将其转化为便于显示的html文件，用于发布或打印。同时可以通过预设不同的样式，使我们的文章具有不同的显示效果。

在GitBlog中，markdown作为网站内容的创作格式，GitBlog本身有将markdown转化为html的程序，用户无需了解转化细节。当然，为了方便GitBlog的管理，
需要对markdown文件的编写具有一定的要求，如需要在markdown中指定文章所属的分类。

## 用途

 1. 可以用来搭建单用户或多用户博客，博主专注创作的同时可以简单的将其发布到网上。
 2. 多人协同创作，如书籍、各种帮助文档的编写和翻译。


## 系统运行需要的条件
 1. git软件，用于本地修改和提交
 2. 文字编辑软件，能够编辑纯文本文件即可
 3. git管理仓库，所有用户数据只有提交到这个仓库才能在Web页面上显示出来。（本系统将使用github最为git仓库）

## 系统工作流程

 1. 用户在Github建立一个仓库，完成仓库和GitBlog的配置。
 2. 用户通过维护这个仓库来管理GitBlog的内容，比如添加新的内容，修改已有内容等等。
 3. 用户修改完成觉得没问题了，将修改提交到Github，此时Github会远程调用预先设置好的URL来通知GitBlog有新的内容。
 4. GitBlog收到请求后进行分析，从Github获取新的或修改的内容并通过markdown解析器对源文件进行解析，然后将解析的结果放到GitBlog的数据库中，以供浏览者访问。

 对与网站访问者而言，访问采用GitBlog建立的网站与访问其他的网站无异。

## 功能概述

### 内容管理

GitBlog主要使用git进行内容的发布和修改等操作，此操作在用户提交更改到Github时自动完成。同时GitBlog提供后台管理接口，
用于对网站内容的进一步管理，如提供多用户博客的内容审核机制。

### 分类与Tag系统

GitBlog通过分类和Tag对网站内容进行组织。

### 评论管理

为了增加交互性，GitBlog加入评论功能。浏览者可以发布，回复评论。当然为了防止恶意评论，系统也可以开启审核机制或评论过滤机制。

### 用户管理

对于多用户系统而言，用户系统是必不可少的。该部分提供诸如用户登录，用户注册，信息修改等一系列与用户相关的功能。
为了适应多种需求，不如用GitBlog的用户管理是可配置的，系统管理员可以很容易的对不必要的功能进行禁用。

